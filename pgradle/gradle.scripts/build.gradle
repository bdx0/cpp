// Customize gradle script for retry open source dependencies
// https://bitbucket.org/nm2501/holy-gradle-plugins/wiki/IntrepidPlugin
// Example about gradle custom task
// gradle -q count
task count << {
    4.times { print $it}
    5.times { print "$it  " }
    10.times { print it }
}


// example depends task
t
task build << {
    println 'building from source ... '
}

task counts(dependsOn: 'build') << {
    5.times { print "$it  " }
}

tasks.addRule("Pattern: ping<ID>") << {
    if (taskName.startsWith("ping")) {
        task(taskName) << {
            println "Pinging:" + (taskName - 'ping')
        }
    }
}

// gradle -q groupPing
task groupPing << { 
    dependsOn pingServer1, pingServer2
}


// gradle build
apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile 'commons-lang:commons-lang:2.5'
    testCompile 'junit:junit:4.8.1'
}

// `src/main/java` Java source
// `src/main/resources` resources
// `src/test/java` Test Java source
// `src/test/resources Test resources

test.doFirst {
    println 'Before testing ....'
}

test.doLast {
    println '.... after testing'
}

ant.importBuild 'build.xml'
task ant << { 
    ant.echo(message: 'hello from ant')
    ant.zip(destfile: 'archive.zip') {
        fileset(dir: 'src') {
            include(name: '**.xml')
            include(name: '**.java')
        }
    }
}
